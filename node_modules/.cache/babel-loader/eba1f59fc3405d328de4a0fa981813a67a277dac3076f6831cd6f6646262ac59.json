{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rrajo\\\\OneDrive\\\\Desktop\\\\Coursera\\\\portfolio-repo\\\\my-project\\\\src\\\\components\\\\ToggleTheme.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from \"react\";\nimport light from './App';\nimport dark from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToggleTheme = () => {\n  _s();\n  // const dark = { base_color: '#0F172A', para_text_color: '#899BB5', color: '#52CDCF' } //dark\n  // const light = { base_color: '#9ED8DB', para_text_color: 'black', theme_color: '#E8F1F2' } //light\n  const [theme, setTheme] = useState(light);\n  const toggleTheme = () => {\n    if (theme === light) {\n      setTheme(dark);\n    } else {\n      setTheme(light);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      children: \"ToggleTheme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ToggleTheme, \"pehbuTXCt9AKXvQOIDE8a3ewwt4=\");\n_c = ToggleTheme;\nexport default ToggleTheme;\nvar _c;\n$RefreshReg$(_c, \"ToggleTheme\");","map":{"version":3,"names":["React","useState","light","dark","jsxDEV","_jsxDEV","Fragment","_Fragment","ToggleTheme","_s","theme","setTheme","toggleTheme","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rrajo/OneDrive/Desktop/Coursera/portfolio-repo/my-project/src/components/ToggleTheme.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState } from \"react\"\r\nimport light from './App' \r\nimport dark from './App'\r\n\r\nconst ToggleTheme = () => {\r\n    // const dark = { base_color: '#0F172A', para_text_color: '#899BB5', color: '#52CDCF' } //dark\r\n    // const light = { base_color: '#9ED8DB', para_text_color: 'black', theme_color: '#E8F1F2' } //light\r\n    const [theme, setTheme] = useState(light)\r\n    const toggleTheme = () => {\r\n        if (theme === light) {\r\n            setTheme(dark);\r\n        }\r\n        else {\r\n            setTheme(light);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button onClick={toggleTheme}>ToggleTheme</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToggleTheme"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACC,KAAK,CAAC;EACzC,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIF,KAAK,KAAKR,KAAK,EAAE;MACjBS,QAAQ,CAACR,IAAI,CAAC;IAClB,CAAC,MACI;MACDQ,QAAQ,CAACT,KAAK,CAAC;IACnB;EACJ,CAAC;EAED,oBACIG,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACIR,OAAA;MAAQS,OAAO,EAAEF,WAAY;MAAAC,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC,gBACpD,CAAC;AAEX,CAAC;AAAAT,EAAA,CAlBKD,WAAW;AAAAW,EAAA,GAAXX,WAAW;AAoBjB,eAAeA,WAAW;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}