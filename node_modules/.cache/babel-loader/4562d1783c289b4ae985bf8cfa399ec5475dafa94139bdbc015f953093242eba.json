{"ast":null,"code":"import _slicedToArray from\"C:/Users/rrajo/github-repos/portfolio-repo-v1/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Content from\"./components/Content\";import Intro from\"./components/Intro\";import Navbar from\"./components/Navbar\";import ToggleTheme from\"./components/ToggleTheme\";import CardProjectFirst from\"./components/CardProjectFirst\";import{lightTheme,darkTheme}from\"./data/theme\";//theme objects containing color values\nimport{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// changes the value of the theme object to darkTheme or lightTheme, when called \nvar _useState=useState(darkTheme),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],setTheme=_useState2[1];var handleToggleTheme=function handleToggleTheme(){if(theme===darkTheme){setTheme(lightTheme);}else{setTheme(darkTheme);}};//theme attribute is passed as a prop to each component to use color values in it.\n//handleToggleTheme function is sent as a prop to Navbar component.\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-64 bg-gray-100 h-screen\",children:[/*#__PURE__*/_jsx(Navbar,{theme:theme,onToggleTheme:handleToggleTheme}),/*#__PURE__*/_jsx(ToggleTheme,{theme:theme})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-3/4 bg-white\",children:[/*#__PURE__*/_jsx(Intro,{theme:theme}),/*#__PURE__*/_jsx(Content,{theme:theme})]})]});}export default App;","map":{"version":3,"names":["Content","Intro","Navbar","ToggleTheme","CardProjectFirst","lightTheme","darkTheme","useState","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","theme","setTheme","handleToggleTheme","className","children","onToggleTheme"],"sources":["C:/Users/rrajo/github-repos/portfolio-repo-v1/src/App.js"],"sourcesContent":["import Content from \"./components/Content\";\nimport Intro from \"./components/Intro\";\nimport Navbar from \"./components/Navbar\";\nimport ToggleTheme from \"./components/ToggleTheme\";\nimport CardProjectFirst from \"./components/CardProjectFirst\";\nimport {lightTheme, darkTheme} from \"./data/theme\"; //theme objects containing color values\nimport { useState } from \"react\";\n\nfunction App() {\n\n  // changes the value of the theme object to darkTheme or lightTheme, when called \n  const [theme, setTheme] = useState(darkTheme);\n  const handleToggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n    } else {\n      setTheme(darkTheme);\n    }\n  };\n\n  //theme attribute is passed as a prop to each component to use color values in it.\n  //handleToggleTheme function is sent as a prop to Navbar component.\n  return (\n    <div className=\"flex\">\n      <div className=\"w-64 bg-gray-100 h-screen\">\n        <Navbar theme={theme} onToggleTheme={handleToggleTheme} />\n        <ToggleTheme theme={theme} />\n      </div>\n      <div className=\"w-3/4 bg-white\">\n        <Intro theme={theme} />\n        <Content theme={theme} />\n      </div>\n    </div>\n  );\n\n}\n\nexport default App;\n"],"mappings":"mIAAA,MAAO,CAAAA,OAAO,KAAM,sBAAsB,CAC1C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,gBAAgB,KAAM,+BAA+B,CAC5D,OAAQC,UAAU,CAAEC,SAAS,KAAO,cAAc,CAAE;AACpD,OAASC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEjC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEb;AACA,IAAAC,SAAA,CAA0BN,QAAQ,CAACD,SAAS,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAtCG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IACtB,GAAM,CAAAI,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAA,CAAS,CAC9B,GAAIF,KAAK,GAAKV,SAAS,CAAE,CACvBW,QAAQ,CAACZ,UAAU,CAAC,CACtB,CAAC,IAAM,CACLY,QAAQ,CAACX,SAAS,CAAC,CACrB,CACF,CAAC,CAED;AACA;AACA,mBACEK,KAAA,QAAKQ,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBT,KAAA,QAAKQ,SAAS,CAAC,2BAA2B,CAAAC,QAAA,eACxCX,IAAA,CAACP,MAAM,EAACc,KAAK,CAAEA,KAAM,CAACK,aAAa,CAAEH,iBAAkB,CAAE,CAAC,cAC1DT,IAAA,CAACN,WAAW,EAACa,KAAK,CAAEA,KAAM,CAAE,CAAC,EAC1B,CAAC,cACNL,KAAA,QAAKQ,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BX,IAAA,CAACR,KAAK,EAACe,KAAK,CAAEA,KAAM,CAAE,CAAC,cACvBP,IAAA,CAACT,OAAO,EAACgB,KAAK,CAAEA,KAAM,CAAE,CAAC,EACtB,CAAC,EACH,CAAC,CAGV,CAEA,cAAe,CAAAJ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}