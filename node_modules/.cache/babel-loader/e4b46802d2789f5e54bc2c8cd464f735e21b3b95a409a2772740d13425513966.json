{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rrajo\\\\github-repos\\\\portfolio-repo-v1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Content from \"./components/Content\";\nimport Intro from \"./components/Intro\";\nimport Navbar from \"./components/Navbar\";\nimport ToggleTheme from \"./components/ToggleTheme\";\nimport CardProjectFirst from \"./components/CardProjectFirst\";\nimport { lightTheme, darkTheme } from \"./data/theme\"; //theme objects containing color values\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // changes the value of the theme object to darkTheme or lightTheme, when called \n  const [theme, setTheme] = useState(darkTheme);\n  const handleToggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n    } else {\n      setTheme(darkTheme);\n    }\n  };\n\n  //theme attribute is passed as a prop to each component to use color values in it.\n  //handleToggleTheme function is sent as a prop to Navbar component.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-64 bg-gray-100 h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        theme: theme,\n        onToggleTheme: handleToggleTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleTheme, {\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-3/10 bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(Intro, {\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PERTOzHjw2Beuv8Sm6p0fxSRqYQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Content","Intro","Navbar","ToggleTheme","CardProjectFirst","lightTheme","darkTheme","useState","jsxDEV","_jsxDEV","App","_s","theme","setTheme","handleToggleTheme","className","children","onToggleTheme","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rrajo/github-repos/portfolio-repo-v1/src/App.js"],"sourcesContent":["import Content from \"./components/Content\";\nimport Intro from \"./components/Intro\";\nimport Navbar from \"./components/Navbar\";\nimport ToggleTheme from \"./components/ToggleTheme\";\nimport CardProjectFirst from \"./components/CardProjectFirst\";\nimport {lightTheme, darkTheme} from \"./data/theme\"; //theme objects containing color values\nimport { useState } from \"react\";\n\nfunction App() {\n\n  // changes the value of the theme object to darkTheme or lightTheme, when called \n  const [theme, setTheme] = useState(darkTheme);\n  const handleToggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n    } else {\n      setTheme(darkTheme);\n    }\n  };\n\n  //theme attribute is passed as a prop to each component to use color values in it.\n  //handleToggleTheme function is sent as a prop to Navbar component.\n  return (\n    <div className=\"flex\">\n      <div className=\"w-64 bg-gray-100 h-screen\">\n        <Navbar theme={theme} onToggleTheme={handleToggleTheme} />\n        <ToggleTheme theme={theme} />\n      </div>\n      <div className=\"w-3/10 bg-white\">\n        <Intro theme={theme} />\n        <Content theme={theme} />\n      </div>\n    </div>\n  );\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,SAAQC,UAAU,EAAEC,SAAS,QAAO,cAAc,CAAC,CAAC;AACpD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACD,SAAS,CAAC;EAC7C,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIF,KAAK,KAAKN,SAAS,EAAE;MACvBO,QAAQ,CAACR,UAAU,CAAC;IACtB,CAAC,MAAM;MACLQ,QAAQ,CAACP,SAAS,CAAC;IACrB;EACF,CAAC;;EAED;EACA;EACA,oBACEG,OAAA;IAAKM,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBP,OAAA;MAAKM,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCP,OAAA,CAACP,MAAM;QAACU,KAAK,EAAEA,KAAM;QAACK,aAAa,EAAEH;MAAkB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DZ,OAAA,CAACN,WAAW;QAACS,KAAK,EAAEA;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACNZ,OAAA;MAAKM,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BP,OAAA,CAACR,KAAK;QAACW,KAAK,EAAEA;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvBZ,OAAA,CAACT,OAAO;QAACY,KAAK,EAAEA;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV;AAACV,EAAA,CA3BQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}